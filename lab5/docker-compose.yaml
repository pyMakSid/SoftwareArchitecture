version: "3.9"

services:
  user_auth_service:
    build:
      context: user_auth_service
      dockerfile: Dockerfile
    container_name: user_auth_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - Chat'n_Message-net
    volumes:
      - ./user_auth_service:/user_service_dir

  message_service:
    build:
      context: messanger_service
      dockerfile: Dockerfile
    container_name: messanger_service
    restart: unless-stopped
    ports:
      - "8001:8000"
    networks:
      - Chat'n_Message-net
    volumes:
      - ./messanger_service:/messanger_service_dir

  init_db:
    build:
      context: db_init
      dockerfile: Dockerfile
    container_name: db_init
    restart: on-failure
    networks:
      - Chat'n_Message-net
    volumes:
      - ./db_init:/user_db
    depends_on:
      - postgres
    entrypoint: ["python3", "db_init.py"]

  postgres:
    container_name: postgres
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: messanger
      PG_DATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - Chat'n_Message-net
    volumes:
      - db_volume:/data/postgres

  mongo:
    container_name: mongo
    image: mongo:4.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - Chat'n_Message-net
    volumes:
      - mongo_volume:/data/mongo

  redis:
    container_name: redis
    image: redis:7.4
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - Chat'n_Message-net

networks:
  Chat'n_Message-net:
    driver: bridge

volumes:
  db_volume:
    driver: local
  mongo_volume:
    driver: local
